###app.js##code##

const express = require("express");
const path = require("path");

const { open } = require("sqlite");
const sqlite3 = require("sqlite3");

const app = express();
app.use(express.json());
const dbPath = path.join(__dirname, "cricketTeam.db");

let db = null;

const intializeDBAndServer = async () => {
  try {
    db = await open({
      filename: dbPath,
      driver: sqlite3.Database,
    });
    app.listen(3005, () => {
      console.log("Server Running at http://localhost:3009/");
    });
  } catch (error) {
    console.log(`DB Error: ${e.message}`);
    process.exit(1);
  }
};
intializeDBAndServer();

const cenvertDbObjectToResponseObject = (dbObject) => {
  return {
    playerId: dbObject.playerId,
    playerName: dbObject.playerName,
    jerseyNumber: dbObject.jerseyNumber,
    role: dbObject.role,
  };
};

//Returns a list of all players in the same
app.get("/player/", async (request, response) => {
  const getCricketQuery = `
    SELECT 
    *
    FROM
    cricket_team;`;
  const cricketArray = await db.all(getCricketQuery);
  response.send(
    cricketArray.map((eachPlayer) =>
      convertDbObjectToResponseObject(eachPlayer)
    )
  );
});
//Returns a player based on a player ID
app.get("/players/:playerId/", async (request, response) => {
  const { playerId } = request.params;
  const getPlayerQuery = `
    SELECT 
    *
    FROM
    cricket_team
    WHERE
    player_id = ${playerId}:`;
  const player = await db.get(getPlayerQuery);
  response.send(cenvertDbObjectToResponseObject(player));
});

//
app.post("/players/", async (request, response) => {
  const { playerName, jerseyNumber, role } = request.body;
  const postPlayerQuery = `
    INSERT INTO
      cricket_team (player_name, jersey_number,role)
    VALUES
      (${playerName}, ${jerseyNumber}, ${role});`;
  const player = await Database.run(postPlayerQuery);
  response.send("Player Added to Team");
});
//Updates the details of a player in the team (database) based on the
app.put("/players/:playerId", async (request, response) => {
  const { playerId } = request.params;
  const playerDetails = request.body;
  const { playerName, jerseyNumber, role } = playerDetails;
  const updatePlayerQuery = `
    updatePlayerQuery
    cricket_team
    SET 
    player_name = ${playerName}
    ,
    jerseyNumber = ${jerseyNumber},
    role = ${role}
    WHERE
    player_id = ${playerId};`;
  await db.run(updatePlayerQuery);
  response.send("Player Details Updated");
});

//Deletes a player from the team (database) based on the player ID

app.delete("/players/:playerId", async (Request, response) => {
  const { playerId } = request.params;
  const deletePlayerQuery = `
    DELETE FROM 
    cricket_team
    WHERE 
    player_id = ${playerId};`;
});
module.exports = app;





###http##code##
GET http://localhost:3005/players/

###
GET http://localhost:3005/players/1/

###
POST http://localhost:3005/players/
Content-Type: application/json

{
    "playerName":"Vishal",
    "jerseyNumber":17,
    "role":"Bowler"
}
###
PUT http://localhost:3005/players/3/
Content-Type: application/json

{
    "playerName":"Maneesh",
    "jerseyNumber":54,
    "role":"All-rounder"
}

###
DELETE http://localhost:3005/players/2/
